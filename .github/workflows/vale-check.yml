name: Vale Documentation Check

on:
  push:
    branches: [ main, master ]
    paths:
      - 'docs/**'
      - '*.md'
      - '.vale.ini'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'docs/**'
      - '*.md'
      - '.vale.ini'

jobs:
  vale-check:
    name: Vale Documentation Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Vale
        uses: errata-ai/vale-action@v2
        with:
          files: |
            docs/
            *.md
            !node_modules/
            !.git/
            
      - name: Run Vale
        run: |
          vale --config=../../.vale.ini docs/ *.md
          
      - name: Upload Vale results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vale-results
          path: |
            .vale/
            vale-results.json
          retention-days: 30
          
      - name: Comment PR with Vale results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Check if Vale found any issues
            const valeOutput = fs.readFileSync('.vale/vale-results.json', 'utf8');
            const results = JSON.parse(valeOutput);
            
            if (results.length > 0) {
              let comment = '## Vale Documentation Check Results\n\n';
              comment += '❌ **Issues found in documentation:**\n\n';
              
              results.forEach(result => {
                comment += `### ${result.file}\n`;
                result.matches.forEach(match => {
                  comment += `- **Line ${match.line}:** ${match.message} (${match.rule})\n`;
                });
                comment += '\n';
              });
              
              comment += '\nPlease fix these issues before merging.';
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '## Vale Documentation Check Results\n\n✅ **No documentation issues found!**'
              });
            } 